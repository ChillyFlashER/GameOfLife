<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension="Generated.cs" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Runtime" #>
<#@ assembly name="$(ProjectDir)..\..\packages\SharpDX.3.0.0-alpha01\lib\net45\SharpDX.dll" #>
<#@ assembly name="$(ProjectDir)..\..\packages\SharpDX.D3DCompiler.3.0.0-alpha01\lib\net45\SharpDX.D3DCompiler.dll" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="SharpDX.D3DCompiler" #>
// -----------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a text template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// -----------------------------------------------------------------------------

<# 
	var file = Path.Combine(System.IO.Path.GetDirectoryName(Host.TemplateFile), "MultiCell.fx");

	var vShader = ShaderBytecode.CompileFromFile(file, "VS", "vs_4_0").Bytecode;
	var gShader = ShaderBytecode.CompileFromFile(file, "GS", "gs_4_0").Bytecode;
	var pShader = ShaderBytecode.CompileFromFile(file, "PS", "ps_4_0").Bytecode;

	var vShaderText = ByteArrayToString(vShader.Data); 
	var gShaderText = ByteArrayToString(gShader.Data); 
	var pShaderText = ByteArrayToString(pShader.Data); 

#>


namespace GameOfLife
{
	class CustomEffect
	{
		public static byte[] VertexShaderByteCode =
		{
<#= vShaderText #>
		};

		public static byte[] GeometryShaderByteCode =
		{
<#= gShaderText #>
		};

		public static byte[] PixelShaderByteCode =
		{
<#= pShaderText #>
		};
	}
}
<#+

private static string ByteArrayToString(byte[] effectCode)
{
	if (effectCode == null)
		return "";

	StringBuilder builder = new StringBuilder(effectCode.Length);

	for (int i = 0; i < effectCode.Length; i++)
	{
		if (i > 0 && i % 24 == 0)
			builder.AppendLine();

		builder.AppendFormat("0x{0:X2}, ", effectCode[i]);
	}

	return builder.ToString();
}

#>